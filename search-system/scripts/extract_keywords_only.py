#!/usr/bin/env python3
"""
Script pour extraire uniquement les mots-cl√©s uniques du fichier consolid√©.
Ne n√©cessite pas d'imports LinkedIn - extraction pure.
"""

import json
import os
import re

def extract_unique_keywords_from_file(consolidated_file_path):
    """
    Extrait tous les mots-cl√©s uniques du fichier consolid√©.
    
    :param consolidated_file_path: Chemin vers le fichier consolid√©
    :return: Liste des mots-cl√©s uniques
    """
    try:
        with open(consolidated_file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Extraire tous les mots-cl√©s avec une regex
        keyword_pattern = r'"keywords":\s*"([^"]*)"'
        matches = re.findall(keyword_pattern, content)
        
        # Cr√©er un set pour √©liminer les doublons et nettoyer
        keywords_set = set()
        for match in matches:
            if match.strip():  # Ignorer les cha√Ænes vides
                keywords_set.add(match.strip())
        
        # Convertir en liste tri√©e
        unique_keywords = sorted(list(keywords_set))
        
        return unique_keywords
        
    except Exception as e:
        print(f"‚ùå Erreur lors de l'extraction des mots-cl√©s: {e}")
        return []

def main():
    """
    Fonction principale pour extraire et afficher les mots-cl√©s uniques.
    """
    # Chemin du fichier consolid√©
    consolidated_file = "/root/project-jobsearch/linkedin-search-/search-system/exports/Exports/linkedin_job_searches_consolidated.json"
    
    if not os.path.exists(consolidated_file):
        print(f"‚ùå Fichier consolid√© non trouv√©: {consolidated_file}")
        return []
    
    print("üîç EXTRACTION DES MOTS-CL√âS UNIQUES")
    print("=" * 50)
    print(f"üìÅ Source: {consolidated_file}")
    print()
    
    unique_keywords = extract_unique_keywords_from_file(consolidated_file)
    
    if unique_keywords:
        print(f"‚úÖ {len(unique_keywords)} mots-cl√©s uniques trouv√©s:")
        print("-" * 50)
        for i, keyword in enumerate(unique_keywords, 1):
            print(f"{i:2d}. {keyword}")
        
        print(f"\nüìã LISTE POUR COPIER-COLLER:")
        print("-" * 30)
        for keyword in unique_keywords:
            print(f'"{keyword}",')
        
        print(f"\nüìä R√âSUM√â:")
        print(f"‚Ä¢ Total mots-cl√©s uniques: {len(unique_keywords)}")
        print(f"‚Ä¢ Fichier source: {os.path.basename(consolidated_file)}")
        
        return unique_keywords
    else:
        print("‚ùå Aucun mot-cl√© trouv√©.")
        return []

if __name__ == "__main__":
    keywords = main()